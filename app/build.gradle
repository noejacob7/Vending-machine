/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'

    id 'jacoco'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}
 
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
javafx {
    version = "17.0.2"
    modules = ['javafx.controls','javafx.fxml']
}


dependencies {
    // Use JUnit Jupiter API for testing.
    //testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation 'org.processing:core:3.3.7'

    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    implementation group: 'com.opencsv', name: 'opencsv', version: '3.7'
}

jacocoTestReport { 
    reports {
        xml {
            enabled true // coveralls plugin depends on xml format report
        }

        html {
            enabled true
        }
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['scrum/a2/controllers/**' ,'scrum/a2/VendingMachineMain.class','scrum/a2/Window.class']
            )
        }))
    }
   
  
}  
test{

}
application {
    // Define the main class for the application.
    mainClass = 'scrum.a2.VendingMachineMain'
}
